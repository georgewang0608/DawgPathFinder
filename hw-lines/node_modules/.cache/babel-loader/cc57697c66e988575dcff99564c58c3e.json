{"ast":null,"code":"import _classCallCheck from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/src/MapLine.tsx\";\n\n/*\n * Copyright (C) 2022 Kevin Zatloukal.  All rights reserved.  Permission is\n * hereby granted to students registered for University of Washington\n * CSE 331 for use solely during Spring Quarter 2022 for purposes of\n * the course.  No other use, copying, distribution, or modification\n * is permitted without prior written consent. Copyrights for\n * third-party components of this work must be honored.  Instructors\n * interested in reusing these course materials should contact the\n * author.\n */\nimport React, { Component } from \"react\";\nimport { Polyline } from \"react-leaflet\";\nimport { UW_LATITUDE, UW_LATITUDE_OFFSET, UW_LATITUDE_SCALE, UW_LONGITUDE, UW_LONGITUDE_OFFSET, UW_LONGITUDE_SCALE } from \"./Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * Converts x coordinate to longitude\n */\nfunction xToLon(x) {\n  return UW_LONGITUDE + (x - UW_LONGITUDE_OFFSET) * UW_LONGITUDE_SCALE;\n}\n/**\n * Converts y coordinate to latitude\n */\n\n\nfunction yToLat(y) {\n  return UW_LATITUDE + (y - UW_LATITUDE_OFFSET) * UW_LATITUDE_SCALE;\n}\n/**\n * A component that will render a line on the React Leaflet map of color from\n * point x1,y1 to x2,y2. This line will convert from the assignment's coordinate\n * system (where 0,0 is the top-left of the UW campus) to latitude and\n * longitude, which the React Leaflet map uses\n */\n\n\nvar MapLine = /*#__PURE__*/function (_Component) {\n  _inherits(MapLine, _Component);\n\n  var _super = _createSuper(MapLine);\n\n  function MapLine(props) {\n    var _this;\n\n    _classCallCheck(this, MapLine);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      edgeText: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(MapLine, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Polyline // Path options includes color, among a variety of line customizations\n      , {\n        pathOptions: {\n          color: this.props.color\n        } // Positions are a list of latitude,longitude pairs that consist of the\n        // points on the line we draw on the map\n        ,\n        positions: [[yToLat(this.props.y1), xToLon(this.props.x1)], [yToLat(this.props.y2), xToLon(this.props.x2)]]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return MapLine;\n}(Component);\n\nexport default MapLine;","map":{"version":3,"sources":["/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/src/MapLine.tsx"],"names":["React","Component","Polyline","UW_LATITUDE","UW_LATITUDE_OFFSET","UW_LATITUDE_SCALE","UW_LONGITUDE","UW_LONGITUDE_OFFSET","UW_LONGITUDE_SCALE","xToLon","x","yToLat","y","MapLine","props","state","edgeText","color","y1","x1","y2","x2"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SACEC,WADF,EAEEC,kBAFF,EAGEC,iBAHF,EAIEC,YAJF,EAKEC,mBALF,EAMEC,kBANF,QAOO,aAPP;;;AAiBA;AACA;AACA;AACA,SAASC,MAAT,CAAgBC,CAAhB,EAAmC;AACjC,SAAOJ,YAAY,GAAG,CAACI,CAAC,GAAGH,mBAAL,IAA4BC,kBAAlD;AACD;AAED;AACA;AACA;;;AACA,SAASG,MAAT,CAAgBC,CAAhB,EAAmC;AACjC,SAAOT,WAAW,GAAG,CAACS,CAAC,GAAGR,kBAAL,IAA2BC,iBAAhD;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;IACMQ,O;;;;;AACJ,mBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFsB;AAKvB;;;;WAED,kBAAS;AACP,0BACE,QAAC,QAAD,CACE;AADF;AAEE,QAAA,WAAW,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAApB,SAFf,CAGE;AACA;AAJF;AAKE,QAAA,SAAS,EAAE,CACT,CAACN,MAAM,CAAC,KAAKG,KAAL,CAAWI,EAAZ,CAAP,EAAwBT,MAAM,CAAC,KAAKK,KAAL,CAAWK,EAAZ,CAA9B,CADS,EAET,CAACR,MAAM,CAAC,KAAKG,KAAL,CAAWM,EAAZ,CAAP,EAAwBX,MAAM,CAAC,KAAKK,KAAL,CAAWO,EAAZ,CAA9B,CAFS;AALb;AAAA;AAAA;AAAA;AAAA,cADF;AAYD;;;;EArBmBpB,S;;AAwBtB,eAAeY,OAAf","sourcesContent":["/*\n * Copyright (C) 2022 Kevin Zatloukal.  All rights reserved.  Permission is\n * hereby granted to students registered for University of Washington\n * CSE 331 for use solely during Spring Quarter 2022 for purposes of\n * the course.  No other use, copying, distribution, or modification\n * is permitted without prior written consent. Copyrights for\n * third-party components of this work must be honored.  Instructors\n * interested in reusing these course materials should contact the\n * author.\n */\n\nimport React, { Component } from \"react\";\nimport { Polyline } from \"react-leaflet\";\nimport {\n  UW_LATITUDE,\n  UW_LATITUDE_OFFSET,\n  UW_LATITUDE_SCALE,\n  UW_LONGITUDE,\n  UW_LONGITUDE_OFFSET,\n  UW_LONGITUDE_SCALE\n} from \"./Constants\";\n\ninterface MapLineProps {\n  color: string; // color of line\n  x1: number; // x coordinate of start point\n  y1: number; // y coordinate of start point\n  x2: number; // x coordinate of end point\n  y2: number; // y coordinate of end point\n}\n\n/**\n * Converts x coordinate to longitude\n */\nfunction xToLon(x: number): number {\n  return UW_LONGITUDE + (x - UW_LONGITUDE_OFFSET) * UW_LONGITUDE_SCALE;\n}\n\n/**\n * Converts y coordinate to latitude\n */\nfunction yToLat(y: number): number {\n  return UW_LATITUDE + (y - UW_LATITUDE_OFFSET) * UW_LATITUDE_SCALE;\n}\n\n/**\n * A component that will render a line on the React Leaflet map of color from\n * point x1,y1 to x2,y2. This line will convert from the assignment's coordinate\n * system (where 0,0 is the top-left of the UW campus) to latitude and\n * longitude, which the React Leaflet map uses\n */\nclass MapLine extends Component<MapLineProps, {}> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      edgeText: \"\",\n    };\n  }\n\n  render() {\n    return (\n      <Polyline\n        // Path options includes color, among a variety of line customizations\n        pathOptions={{ color: this.props.color }}\n        // Positions are a list of latitude,longitude pairs that consist of the\n        // points on the line we draw on the map\n        positions={[\n          [yToLat(this.props.y1), xToLon(this.props.x1)],\n          [yToLat(this.props.y2), xToLon(this.props.x2)],\n        ]}\n      />\n    );\n  }\n}\n\nexport default MapLine;\n"]},"metadata":{},"sourceType":"module"}