{"ast":null,"code":"import _classCallCheck from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/src/Map.tsx\";\n\n/*\n * Copyright (C) 2022 Kevin Zatloukal.  All rights reserved.  Permission is\n * hereby granted to students registered for University of Washington\n * CSE 331 for use solely during Spring Quarter 2022 for purposes of\n * the course.  No other use, copying, distribution, or modification\n * is permitted without prior written consent. Copyrights for\n * third-party components of this work must be honored.  Instructors\n * interested in reusing these course materials should contact the\n * author.\n */\nimport React, { Component } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport MapLine from \"./MapLine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Map = /*#__PURE__*/function (_Component) {\n  _inherits(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, props);\n\n    _this.onCenter = function () {\n      var cord = _this.state.inputValue.trim().split(/\\s+/);\n\n      if (cord.length !== 2) {\n        alert(\"coordinate is supposed to be 2 arguments\");\n\n        _this.setState({\n          inputValue: ''\n        });\n\n        _this.props.onChange([0, 0]);\n\n        return;\n      }\n\n      if (isNaN(Number(cord[0])) || isNaN(Number(cord[1]))) {\n        alert(\"coordinate is supposed to be 2 numbers\");\n\n        _this.setState({\n          inputValue: ''\n        });\n\n        _this.props.onChange([0, 0]);\n\n        return;\n      }\n\n      var coordinate = [Number(cord[0]), Number(cord[1])];\n\n      _this.setState({\n        inputValue: ''\n      });\n\n      _this.props.onChange(coordinate);\n    };\n\n    _this.state = {\n      inputValue: ''\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        children: [\"Enter Map Center \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 1,\n          cols: 30,\n          onChange: function onChange(event) {\n            console.log('textarea onChange was called');\n\n            _this2.setState({\n              inputValue: event.target.value\n            });\n          },\n          value: this.state.inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onCenter,\n          children: \"recenter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: this.props.position,\n          zoom: 15,\n          scrollWheelZoom: false,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), // loop through the props updated by App while mapping the key to each line and return the rendered\n          // Mapline for display\n          this.props.edgeList ? this.props.edgeList.map(function (edge, index) {\n            return /*#__PURE__*/_jsxDEV(MapLine, {\n              color: edge.color.toLowerCase(),\n              x1: edge.x1,\n              y1: edge.y1,\n              x2: edge.x2,\n              y2: edge.y2\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 24\n            }, _this2);\n          }) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-lines/src/Map.tsx"],"names":["React","Component","MapContainer","TileLayer","MapLine","Map","props","onCenter","cord","state","inputValue","trim","split","length","alert","setState","onChange","isNaN","Number","coordinate","event","console","log","target","value","position","edgeList","map","edge","index","color","toLowerCase","x1","y1","x2","y2"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2022 Kevin Zatloukal.  All rights reserved.  Permission is\n * hereby granted to students registered for University of Washington\n * CSE 331 for use solely during Spring Quarter 2022 for purposes of\n * the course.  No other use, copying, distribution, or modification\n * is permitted without prior written consent. Copyrights for\n * third-party components of this work must be honored.  Instructors\n * interested in reusing these course materials should contact the\n * author.\n */\n\nimport { LatLngExpression } from \"leaflet\";\nimport React, { Component } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport MapLine from \"./MapLine\";\nimport { UW_LATITUDE_CENTER, UW_LONGITUDE_CENTER } from \"./Constants\";\nimport {ColoredEdge} from \"./ColoredEdge\";\n\n// This defines the location of the map. These are the coordinates of the UW Seattle campus\n// const position: LatLngExpression = [UW_LATITUDE_CENTER, UW_LONGITUDE_CENTER];\n\ninterface MapProps {\n  // TODO: Define the props of this component. You will want to pass down edges\n  // so you can render them here\n    onChange(cord: LatLngExpression) : void;\n    position: LatLngExpression;\n    edgeList: ColoredEdge[]; // Array of ColoredEdge to be rendered\n}\n\ninterface MapState {\n    inputValue: string;\n}\n\nclass Map extends Component<MapProps, MapState> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {inputValue: ''};\n    }\n\n  render() {\n    return (\n      <div id=\"map\">\n          Enter Map Center <br/>\n          <textarea\n              rows={1}\n              cols={30}\n              onChange={(event) => {console.log('textarea onChange was called');\n                  this.setState({inputValue: event.target.value})}}\n              value={this.state.inputValue}\n          /> <br/>\n          <button onClick={this.onCenter}>recenter</button>\n        <MapContainer\n          center={this.props.position}\n          zoom={15}\n          scrollWheelZoom={false}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {\n              // loop through the props updated by App while mapping the key to each line and return the rendered\n              // Mapline for display\n            this.props.edgeList ? this.props.edgeList.map((edge, index) => {\n                return <MapLine key={index} color={edge.color.toLowerCase()} x1={edge.x1} y1={edge.y1}\n                                x2={edge.x2} y2={edge.y2}/>\n            }) : null\n          }\n        </MapContainer>\n      </div>\n    );\n  }\n\n  onCenter = () => {\n        let cord = this.state.inputValue.trim().split(/\\s+/);\n        if (cord.length !== 2) {\n            alert(\"coordinate is supposed to be 2 arguments\");\n            this.setState({inputValue: ''});\n            this.props.onChange([0, 0]);\n            return;\n        }\n        if (isNaN(Number(cord[0])) || isNaN(Number(cord[1]))) {\n            alert(\"coordinate is supposed to be 2 numbers\");\n            this.setState({inputValue: ''});\n            this.props.onChange([0, 0]);\n            return;\n        }\n        let coordinate : LatLngExpression = [Number(cord[0]), Number(cord[1])];\n        this.setState({inputValue: ''});\n        this.props.onChange(coordinate);\n    }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}