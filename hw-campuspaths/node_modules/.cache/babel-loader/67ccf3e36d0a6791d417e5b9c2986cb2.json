{"ast":null,"code":"import _regeneratorRuntime from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/src/EdgeList.tsx\";\n\n/*\n * Copyright (C) 2022 Kevin Zatloukal.  All rights reserved.  Permission is\n * hereby granted to students registered for University of Washington\n * CSE 331 for use solely during Spring Quarter 2022 for purposes of\n * the course.  No other use, copying, distribution, or modification\n * is permitted without prior written consent. Copyrights for\n * third-party components of this work must be honored.  Instructors\n * interested in reusing these course materials should contact the\n * author.\n */\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * A text field that allows the user to enter the list of edges.\n * Also contains the buttons that the user will use to interact with the app.\n */\nvar EdgeList = /*#__PURE__*/function (_Component) {\n  _inherits(EdgeList, _Component);\n\n  var _super = _createSuper(EdgeList);\n\n  function EdgeList(props) {\n    var _this;\n\n    _classCallCheck(this, EdgeList);\n\n    _this = _super.call(this, props);\n    _this.initialize = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:4567/building\");\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent.json());\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.onDraw = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var edgeList, shortest, i;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              edgeList = [];\n              _context2.next = 3;\n              return fetch(\"http://localhost:4567/path?start=\" + encodeURIComponent(_this.state.start) + \"&end=\" + encodeURIComponent(_this.state.end));\n\n            case 3:\n              shortest = _context2.sent.json();\n              console.log(shortest);\n\n              for (i = 0; i < shortest.length; i++) {\n                edgeList.push({\n                  x1: Number(shortest[0].startX),\n                  y1: Number(shortest[0].startY),\n                  x2: Number(shortest[0].endX),\n                  y2: Number(shortest[0].endY),\n                  color: \"red\"\n                });\n              }\n\n              _this.props.onChange(edgeList);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.onClear = function () {\n      _this.setState({\n        start: '',\n        end: ''\n      });\n\n      _this.props.onChange([]);\n    };\n\n    _this.startBuildingSelected = function (e) {\n      // set state of b1 to the selected option\n      _this.setState({\n        start: e.target.value\n      });\n\n      console.log(e.target.value);\n    };\n\n    _this.endBuildingSelected = function (e) {\n      _this.setState({\n        end: e.target.value\n      });\n    };\n\n    _this.state = {\n      start: '',\n      end: '',\n      buildings: {}\n    };\n\n    _this.initialize().then(function (res) {\n      _this.setState({\n        buildings: res\n      });\n    }); // this.initializeBuildings()\n\n\n    console.log(_this.state);\n    return _this;\n  }\n\n  _createClass(EdgeList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"edge-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.startBuildingSelected,\n          value: this.state.start,\n          children: Object.keys(this.state.buildings).map(function (key) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: _this2.state.buildings[key]\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 28\n            }, _this2);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.endBuildingSelected,\n          value: this.state.end,\n          children: Object.keys(this.state.buildings).map(function (key) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: _this2.state.buildings[key]\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 32\n            }, _this2);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onDraw,\n          children: \"Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onClear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return EdgeList;\n}(Component);\n\nexport default EdgeList;","map":{"version":3,"sources":["/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/src/EdgeList.tsx"],"names":["React","Component","EdgeList","props","initialize","fetch","json","onDraw","edgeList","encodeURIComponent","state","start","end","shortest","console","log","i","length","push","x1","Number","startX","y1","startY","x2","endX","y2","endY","color","onChange","onClear","setState","startBuildingSelected","e","target","value","endBuildingSelected","buildings","then","res","Object","keys","map","key"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2022 Kevin Zatloukal.  All rights reserved.  Permission is\n * hereby granted to students registered for University of Washington\n * CSE 331 for use solely during Spring Quarter 2022 for purposes of\n * the course.  No other use, copying, distribution, or modification\n * is permitted without prior written consent. Copyrights for\n * third-party components of this work must be honored.  Instructors\n * interested in reusing these course materials should contact the\n * author.\n */\n\nimport React, {Component} from 'react';\nimport {ColoredEdge} from \"./ColoredEdge\";\nimport {buildQueries} from \"@testing-library/react\";\n\ninterface EdgeListProps {\n    onChange(edges: ColoredEdge[]): void;  // called when a new edge list is ready\n                                    // TODO: once you decide how you want to communicate the edges to the App, you should\n                                    // change the type of edges so it isn't `any`\n}\n\ninterface EdgeListState {\n    start: string,\n    end: string\n    buildings: any;\n}\n\n/**\n * A text field that allows the user to enter the list of edges.\n * Also contains the buttons that the user will use to interact with the app.\n */\nclass EdgeList extends Component<EdgeListProps, EdgeListState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            start: '',\n            end: '',\n            buildings: {}\n        };\n        this.initialize().then((res) => {this.setState({buildings: res})});\n        // this.initializeBuildings()\n        console.log(this.state);\n    }\n\n    render() {\n        return (\n            <div id=\"edge-list\">\n                <select onChange={this.startBuildingSelected} value={this.state.start}>\n                    {Object.keys(this.state.buildings).map((key) => {\n                    return <option key={key} value={key}>{this.state.buildings[key]}</option>})}\n                </select>\n                <select onChange={this.endBuildingSelected} value={this.state.end}>\n                    {Object.keys(this.state.buildings).map((key) => {\n                        return <option key={key} value={key}>{this.state.buildings[key]}</option>})}\n                </select>\n                {/*Edges <br/>*/}\n                {/*<textarea*/}\n                {/*    rows={5}*/}\n                {/*    cols={30}*/}\n                {/*    onChange={(event) => {console.log('textarea onChange was called');*/}\n                {/*    this.setState({inputValue: event.target.value})}}*/}\n                {/*    value={this.state.inputValue}*/}\n                {/*/> <br/>*/}\n                <button onClick={this.onDraw}>Draw</button>\n                <button onClick={this.onClear}>Clear</button>\n            </div>\n        );\n    }\n\n    initialize = async () => {\n        return (await fetch(\"http://localhost:4567/building\")).json();\n    }\n    /** update the string input to the edges*/\n    onDraw = async () => {\n        let edgeList: ColoredEdge[] = [];\n        let shortest: any =\n            (await fetch(\"http://localhost:4567/path?start=\" + encodeURIComponent(this.state.start) + \"&end=\" +\n                encodeURIComponent(this.state.end))).json();\n        console.log(shortest);\n        for (let i  = 0; i < shortest.length; i++ ) {\n            edgeList.push({x1: Number(shortest[0].startX), y1: Number(shortest[0].startY),\n                x2: Number(shortest[0].endX), y2: Number(shortest[0].endY), color: \"red\"});\n        }\n        this.props.onChange(edgeList);\n    }\n\n    /** clear the input and alert other component*/\n    onClear = () => {\n        this.setState({start: '', end: ''});\n        this.props.onChange([]);\n    }\n\n    startBuildingSelected = (e: any) => {\n        // set state of b1 to the selected option\n        this.setState({start: e.target.value})\n        console.log(e.target.value);\n    }\n\n    endBuildingSelected = (e: any) => {\n        this.setState({end: e.target.value})\n    }\n}\n\nexport default EdgeList;\n"]},"metadata":{},"sourceType":"module"}