{"ast":null,"code":"import _regeneratorRuntime from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/src/EdgeList.tsx\";\n\n/*\n * Copyright (C) 2022 Kevin Zatloukal.  All rights reserved.  Permission is\n * hereby granted to students registered for University of Washington\n * CSE 331 for use solely during Spring Quarter 2022 for purposes of\n * the course.  No other use, copying, distribution, or modification\n * is permitted without prior written consent. Copyrights for\n * third-party components of this work must be honored.  Instructors\n * interested in reusing these course materials should contact the\n * author.\n */\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * A text field that allows the user to enter the list of edges.\n * Also contains the buttons that the user will use to interact with the app.\n */\nvar EdgeList = /*#__PURE__*/function (_Component) {\n  _inherits(EdgeList, _Component);\n\n  var _super = _createSuper(EdgeList);\n\n  function EdgeList(props) {\n    var _this;\n\n    _classCallCheck(this, EdgeList);\n\n    _this = _super.call(this, props);\n    _this.initialize = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:4567/building\");\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent.json());\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.onDraw = function () {};\n\n    _this.onClear = function () {\n      _this.setState({\n        start: '',\n        end: ''\n      });\n\n      _this.props.onChange([]);\n    };\n\n    _this.startBuildingSelected = function (e) {\n      // set state of b1 to the selected option\n      _this.setState({\n        start: e.target.value\n      });\n    };\n\n    _this.endBuildingSelected = function (e) {\n      _this.setState({\n        end: e.target.value\n      });\n    };\n\n    _this.state = {\n      start: '',\n      end: '',\n      buildings: {}\n    };\n\n    _this.initialize().then(function (res) {\n      _this.setState({\n        buildings: res\n      });\n    });\n\n    console.log(_this.state);\n    return _this;\n  }\n\n  _createClass(EdgeList, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"edge-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.startBuildingSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.endBuildingSelected,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onDraw,\n          children: \"Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onClear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return EdgeList;\n}(Component);\n\nexport default EdgeList;","map":{"version":3,"sources":["/Users/test/Downloads/CSE331/cse331-22sp-yunqiw68/hw-campuspaths/src/EdgeList.tsx"],"names":["React","Component","EdgeList","props","initialize","fetch","json","onDraw","onClear","setState","start","end","onChange","startBuildingSelected","e","target","value","endBuildingSelected","state","buildings","then","res","console","log"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAgBA;AACA;AACA;AACA;IACMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,KAAN;AADoB,UAwCxBC,UAxCwB,yEAwCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKC,KAAK,CAAC,gCAAD,CADV;;AAAA;AAAA,6DAC8CC,IAD9C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxCW;;AAAA,UA4CxBC,MA5CwB,GA4Cf,YAAM,CAEd,CA9CuB;;AAAA,UAiDxBC,OAjDwB,GAiDd,YAAM;AACZ,YAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,GAAG,EAAE;AAAjB,OAAd;;AACA,YAAKR,KAAL,CAAWS,QAAX,CAAoB,EAApB;AACH,KApDuB;;AAAA,UAsDxBC,qBAtDwB,GAsDA,UAACC,CAAD,EAAY;AAChC;AACA,YAAKL,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEI,CAAC,CAACC,MAAF,CAASC;AAAjB,OAAd;AACH,KAzDuB;;AAAA,UA2DxBC,mBA3DwB,GA2DF,UAACH,CAAD,EAAY;AAC9B,YAAKL,QAAL,CAAc;AAACE,QAAAA,GAAG,EAAEG,CAAC,CAACC,MAAF,CAASC;AAAf,OAAd;AACH,KA7DuB;;AAEpB,UAAKE,KAAL,GAAa;AACTR,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,GAAG,EAAE,EAFI;AAGTQ,MAAAA,SAAS,EAAE;AAHF,KAAb;;AAKD,UAAKf,UAAL,GAAkBgB,IAAlB,CAAuB,UAACC,GAAD,EAAS;AAAC,YAAKZ,QAAL,CAAc;AAACU,QAAAA,SAAS,EAAEE;AAAZ,OAAd;AAAgC,KAAjE;;AAECC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKL,KAAjB;AAToB;AAWvB;;;;WAED,kBAAS;AACL,0BACI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,gCACI;AAAQ,UAAA,QAAQ,EAAE,KAAKL;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,UAAA,QAAQ,EAAE,KAAKI,mBAAvB;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAmBI;AAAQ,UAAA,OAAO,EAAE,KAAKV,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAoBI;AAAQ,UAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAwBH;;;;EAvCkBP,S;;AAiEvB,eAAeC,QAAf","sourcesContent":["/*\n * Copyright (C) 2022 Kevin Zatloukal.  All rights reserved.  Permission is\n * hereby granted to students registered for University of Washington\n * CSE 331 for use solely during Spring Quarter 2022 for purposes of\n * the course.  No other use, copying, distribution, or modification\n * is permitted without prior written consent. Copyrights for\n * third-party components of this work must be honored.  Instructors\n * interested in reusing these course materials should contact the\n * author.\n */\n\nimport React, {Component} from 'react';\nimport {ColoredEdge} from \"./ColoredEdge\";\nimport {buildQueries} from \"@testing-library/react\";\n\ninterface EdgeListProps {\n    onChange(edges: ColoredEdge[]): void;  // called when a new edge list is ready\n                                    // TODO: once you decide how you want to communicate the edges to the App, you should\n                                    // change the type of edges so it isn't `any`\n}\n\ninterface EdgeListState {\n    start: string,\n    end: string\n    buildings: {};\n}\n\n/**\n * A text field that allows the user to enter the list of edges.\n * Also contains the buttons that the user will use to interact with the app.\n */\nclass EdgeList extends Component<EdgeListProps, EdgeListState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            start: '',\n            end: '',\n            buildings: {}\n        };\n       this.initialize().then((res) => {this.setState({buildings: res})})\n\n        console.log(this.state);\n\n    }\n\n    render() {\n        return (\n            <div id=\"edge-list\">\n                <select onChange={this.startBuildingSelected}>\n                    {}\n                </select>\n                <select onChange={this.endBuildingSelected}>\n                    <option></option>\n                    <option></option>\n                    <option></option>\n                    <option></option>\n                    <option></option>\n                </select>\n                {/*Edges <br/>*/}\n                {/*<textarea*/}\n                {/*    rows={5}*/}\n                {/*    cols={30}*/}\n                {/*    onChange={(event) => {console.log('textarea onChange was called');*/}\n                {/*    this.setState({inputValue: event.target.value})}}*/}\n                {/*    value={this.state.inputValue}*/}\n                {/*/> <br/>*/}\n                <button onClick={this.onDraw}>Draw</button>\n                <button onClick={this.onClear}>Clear</button>\n            </div>\n        );\n    }\n\n    initialize = async () => {\n        return (await fetch(\"http://localhost:4567/building\")).json();\n    }\n    /** update the string input to the edges*/\n    onDraw = () => {\n\n    }\n\n    /** clear the input and alert other component*/\n    onClear = () => {\n        this.setState({start: '', end: ''});\n        this.props.onChange([]);\n    }\n\n    startBuildingSelected = (e: any) => {\n        // set state of b1 to the selected option\n        this.setState({start: e.target.value})\n    }\n\n    endBuildingSelected = (e: any) => {\n        this.setState({end: e.target.value})\n    }\n}\n\nexport default EdgeList;\n"]},"metadata":{},"sourceType":"module"}